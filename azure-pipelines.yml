# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# This pipeline builds a Java project with Maven
# https://aka.ms/yaml

# This is a multi-stage pipeline for building and deploying a Java app

trigger:
- main

pool:
  vmImage: 'My-Local-Agents'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Maven Project'
    steps:
    - task: Maven@3
      displayName: 'Build with Maven'
      inputs:
        mavenPomFile: 'pom.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11' # Or 1.8, 1.17
        jdkArchitectureOption: 'x64'
        publishJUnitTestResults: false # Set to false if you have no tests
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build # This stage will only run if the Build stage succeeds
  condition: succeeded()
  jobs:
  - job: DeployJob
    displayName: 'Deploy to Azure App Service'
    steps:
    - task: AzureWebApp@1
      displayName: 'Deploy WAR to App Service'
      inputs:
        azureSubscription: 'Azure-Subscription-Connection' # <-- IMPORTANT: Use the name of the service connection you created
        appType: 'webAppLinux'
        appName: 'elango-my-shuttle-app' # <-- IMPORTANT: Use the name of your Azure App Service
        package: '$(Pipeline.Workspace)/drop/**/*.war' # Path to the artifact
        runtimeStack: 'TOMCAT|9.0-java11' # Or your specific Tomcat/Java version

